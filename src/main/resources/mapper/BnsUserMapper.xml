<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bns.dao.user.BnsUserDao">
  <resultMap id="BaseResultMap" type="com.bns.model.user.BnsUser">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="id_card" jdbcType="VARCHAR" property="idCard" />
    <result column="sex" jdbcType="TINYINT" property="sex" />
    <result column="nation" jdbcType="VARCHAR" property="nation" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="wechat_code" jdbcType="VARCHAR" property="wechatCode" />
    <result column="qq_code" jdbcType="VARCHAR" property="qqCode" />
    <result column="age" jdbcType="TINYINT" property="age" />
    <result column="education" jdbcType="TINYINT" property="education" />
    <result column="source" jdbcType="VARCHAR" property="source" />
    <result column="skill" jdbcType="VARCHAR" property="skill" />
    <result column="history" jdbcType="VARCHAR" property="history" />
    <result column="job" jdbcType="VARCHAR" property="job" />
    <result column="status" jdbcType="TINYINT" property="status" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from bns_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.bns.model.user.BnsUser">
    insert into bns_user (id, name, mobile, 
      id_card, sex, nation, 
      address, create_time, wechat_code, 
      qq_code, age, education, 
      source, skill, history, 
      job)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, 
      #{idCard,jdbcType=VARCHAR}, #{sex,jdbcType=TINYINT}, #{nation,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{wechatCode,jdbcType=VARCHAR}, 
      #{qqCode,jdbcType=VARCHAR}, #{age,jdbcType=TINYINT}, #{education,jdbcType=TINYINT}, 
      #{source,jdbcType=VARCHAR}, #{skill,jdbcType=VARCHAR}, #{history,jdbcType=VARCHAR}, 
      #{job,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.bns.model.user.BnsUser">
    update bns_user
    set name = #{name,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      id_card = #{idCard,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=TINYINT},
      nation = #{nation,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      wechat_code = #{wechatCode,jdbcType=VARCHAR},
      qq_code = #{qqCode,jdbcType=VARCHAR},
      age = #{age,jdbcType=TINYINT},
      education = #{education,jdbcType=TINYINT},
      source = #{source,jdbcType=VARCHAR},
      skill = #{skill,jdbcType=VARCHAR},
      history = #{history,jdbcType=VARCHAR},
      job = #{job,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, name, mobile, id_card, sex, nation, address, create_time, wechat_code, 
    qq_code, age, education, source, skill, history, job
    from bns_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, name, mobile, id_card, sex, nation, address, create_time, wechat_code, 
    qq_code, age, education, source, skill, history, job
    from bns_user
  </select>

  <!-- 查询列表 cl_t_user  -->
  <select id="findPaging" parameterType="com.bns.model.user.BnsUser" resultMap="BaseResultMap">
    select id, name, mobile, id_card, sex, nation, address, create_time, wechat_code,
    qq_code, age, education, source, skill, history, job,status
    from bns_user t1
    where 1=1
    <if test="name != null and name != ''">
      and t1.name like '%${name}%'
    </if>
    <if test="mobile != null and mobile != ''">
      and t1.mobile like '%${mobile}%'
    </if>
    <if test="idCard != null and idCard != ''">
      and t1.id_card = #{idCard}
    </if>
    ORDER BY t1.create_time DESC
  </select>
</mapper>